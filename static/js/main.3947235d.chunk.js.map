{"version":3,"sources":["Settings.jsx","services/products/ProductServices.js","general/shares/PlaceHolder.jsx","general/components/products/ProductSettings.js","general/components/products/ProductList.jsx","general/components/products/ProductEdit.jsx","general/pages/About.jsx","general/pages/Topics.jsx","general/pages/Home.jsx","general/shares/ShareComponents.jsx","general/menus/MainMenu.jsx","general/pages/DashBoard.jsx","services/auth/AuthServices.jsx","general/auth/Login.jsx","App.js","serviceWorker.js","index.js"],"names":["Settings","url","auth","products","endPointBase","SecurityCredentials","user","password","ProductServices","getAll","token","page","size","sortBy","axios","get","headers","Authorization","getEdit","id","Header","Layout","Content","Footer","PlaceHolder","props","style","margin","padding","background","minHeight","span","children","ProductSettings","productColumns","title","dataIndex","key","render","context","currentItemDelete","to","type","ProductList","useState","dataSource","setDataSource","useEffect","then","response","data","content","columns","Option","Select","AutoComplete","ProductEdit","useParams","formItemLayout","labelCol","wrapperCol","buttonItemLayout","offset","layout","onSubmit","e","preventDefault","form","validateFields","err","values","console","log","Item","name","rules","required","message","placeholder","value","htmlType","About","Topic","topicId","Topics","match","useRouteMatch","path","Home","ShareComponents","SubMenu","Menu","MainMenu","theme","defaultSelectedKeys","mode","Icon","onClick","logout","Sider","DashBoard","state","onCollapse","collapsible","collapsed","className","textAlign","AuthServices","doLogin","httpHeaders","btoa","grant_type","username","post","qs","stringify","LoginComponent","Modavisible","handleSubmit","setUser","catch","error","Modal","error_description","toggleModal","setState","order","visible","this","onOk","okText","onFinish","onFinishFailed","errorInfo","prefix","color","valuePropName","initialValue","href","React","Component","App","sessionStorage","getItem","JSON","parse","removeItem","access_token","setItem","Boolean","window","location","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3947235d.chunk.js","sourcesContent":["const Settings = {\r\n    url: 'https://api.livemarket.business',\r\n    auth: '/oauth/token',\r\n\r\n    products: {endPointBase: '/api/v1/products/'},\r\n\r\n    SecurityCredentials: {user: 'flutter-app', password: 'L4gzz8ECBrdmzP8CpgGeSVa9'}\r\n}\r\nexport default Settings;\r\n","import Settings from \"../../Settings\"\r\nimport axios from \"axios\";\r\n\r\nconst ProductServices = {\r\n    getAll: (token = '', page = 0, size = 10, sortBy = 'id') => {\r\n        const url = `${Settings.url}${Settings.products.endPointBase}?page=${page}&size=${size}&sortBy=${sortBy}`;\r\n        return axios.get(url, {headers: {Authorization: token}});\r\n    },\r\n    getEdit: (token = '', id = 'id') => {\r\n        const url = `${Settings.url}${Settings.products.endPointBase}${id}/`;\r\n        return axios.get(url, {headers: {Authorization: token}});\r\n    }\r\n\r\n}\r\nexport default ProductServices;\r\n","import React from 'react';\r\nimport {Col, Layout, Row} from \"antd\";\r\n\r\nconst {Header, Footer, Content} = Layout;\r\n\r\nconst PlaceHolder = (props) => {\r\n\r\n    return (<>\r\n\r\n        <Layout>\r\n            <Header>\r\n\r\n            </Header>\r\n            <Content\r\n                style={{\r\n                    margin: '24px 16px',\r\n                    padding: 24,\r\n                    background: '#fff',\r\n                    minHeight: 280,\r\n                }}\r\n            >\r\n                <Row>\r\n                    <Col span={5}></Col>\r\n                    <Col span={18}>{props.children}</Col>\r\n                </Row>\r\n            </Content>\r\n        </Layout>\r\n\r\n    </>);\r\n}\r\nexport default PlaceHolder;\r\n","import React from 'react';\r\nimport {Button} from 'antd';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst ProductSettings = {\r\n    productColumns: [\r\n        {\r\n            title: 'Name',\r\n            dataIndex: 'name',\r\n            key: 'name',\r\n        },\r\n        {\r\n            title: 'price',\r\n            dataIndex: 'price',\r\n            key: 'price',\r\n        },\r\n        {\r\n            title: 'category',\r\n            dataIndex: 'category.name',\r\n            key: 'category',\r\n        },\r\n\r\n        {\r\n            title: 'Action',\r\n            key: 'action',\r\n            render: (context) => {\r\n                const currentItemEdit = `/products/edit/${context.id}/`\r\n                const currentItemDelete = `/products/delete/${context.id}/`\r\n\r\n                return (<>\r\n\r\n                    <Link to={currentItemDelete}>\r\n                        <Button type=\"primary\">Delete</Button>\r\n                    </Link>\r\n\r\n                    <Link to={currentItemDelete}>\r\n                        <Button type=\"danger\">Edit</Button>\r\n                    </Link>\r\n\r\n                </>);\r\n            },\r\n        }\r\n    ]\r\n}\r\n\r\nexport default ProductSettings;\r\n","import React, { useState,useEffect, useDebugValue } from 'react';\r\n\r\nimport { Table, Divider, Tag,Form, Icon, Input, Button, Checkbox,Row, Col,Modal ,Layout  } from \"antd\";\r\nimport ProductServices from \"../../../services/products/ProductServices\";\r\nimport PlaceHolder from \"../../shares/PlaceHolder\";\r\nimport ProductSettings from \"./ProductSettings\";\r\n\r\n\r\n\r\n\r\nconst ProductList = (props)=> {\r\n    const [dataSource, setDataSource] = useState([]);\r\n\r\n\r\n    useEffect(() => {\r\n        if (props.user)\r\n        {\r\n\r\n            ProductServices.getAll(props.user.Authorization,0).then(response => {\r\n\r\n                setDataSource(response.data.content);\r\n            });\r\n\r\n        }\r\n\r\n\r\n    }, [props.user]);\r\n\r\n    return (\r\n        <PlaceHolder >\r\n            <Table dataSource={dataSource} columns={ProductSettings.productColumns} />\r\n        </PlaceHolder>\r\n    )\r\n}\r\n\r\nexport default ProductList;\r\n","import React, {useEffect, useState} from 'react';\r\nimport {AutoComplete, Button, Form, Input, Select} from 'antd';\r\nimport {useParams} from \"react-router-dom\";\r\n\r\nimport ProductServices from \"../../../services/products/ProductServices\";\r\nimport PlaceHolder from \"../../shares/PlaceHolder\";\r\n\r\nconst {Option} = Select;\r\nconst AutoCompleteOption = AutoComplete.Option;\r\n\r\nexport default  function ProductEdit  (props) {\r\n\r\n    let {id} = useParams();\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                console.log('Received values of form: ', values);\r\n            }\r\n        });\r\n    };\r\n\r\n    const [dataSource, setDataSource] = useState({});\r\n    const formLayout = 'horizontal';\r\n    const formItemLayout = {labelCol: {span: 4}, wrapperCol: {span: 14}};\r\n    const buttonItemLayout = {\r\n        wrapperCol: {span: 14, offset: 4},\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (id) {\r\n\r\n            ProductServices.getEdit(props.user.Authorization, id).then(response => {\r\n\r\n                setDataSource(response.data);\r\n            });\r\n\r\n        }\r\n\r\n\r\n    }, [id]);\r\n\r\n    return (<>\r\n\r\n\r\n        <PlaceHolder>\r\n            <Form layout={formLayout} onSubmit={handleSubmit}>\r\n\r\n                <Form.Item name=\"name\" {...formItemLayout} rules={[{ required: true, message: \"Please type name!\" }]}>\r\n                    <Input placeholder=\"Please input   name\"/>\r\n                </Form.Item>\r\n\r\n                    <Select name=\"Category\"  placeholder=\"Please select a country\">\r\n                        <Option value=\"china\">China</Option>\r\n                        <Option value=\"usa\">U.S.A</Option>\r\n                    </Select>,\r\n\r\n\r\n                <Form.Item name=\"quality\" {...formItemLayout}   rules={[{ required: true, message: \"Please type quality!\" }]} >\r\n                     <Input placeholder=\"Please input quality\"/>\r\n                </Form.Item>\r\n\r\n\r\n                <Form.Item name=\"price\" {...formItemLayout} rules={[{ required: true , message: 'Please input your price'}]}>\r\n                    <Input placeholder=\"Please input your price\"/>\r\n                </Form.Item>\r\n\r\n\r\n                <Form.Item {...buttonItemLayout}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">Submit</Button>\r\n                </Form.Item>\r\n            </Form>\r\n        </PlaceHolder>\r\n\r\n\r\n    </>);\r\n}\r\n\r\n\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n    return <h2>About</h2>;\r\n}\r\n","import React from \"react\";\r\nimport {Link, Route, Switch, useParams, useRouteMatch} from \"react-router-dom\";\r\nimport {DatePicker} from \"antd\";\r\n\r\nfunction Topic() {\r\n    let {topicId} = useParams();\r\n    return (\r\n        <>\r\n            <DatePicker/>\r\n            <h3>Requested topic ID: {topicId}</h3>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default function Topics() {\r\n    let match = useRouteMatch();\r\n\r\n    return (\r\n        <div>\r\n            <h2>Topics</h2>\r\n\r\n            <ul>\r\n                <li>\r\n                    <Link to={`${match.url}/components`}>Components</Link>\r\n                </li>\r\n                <li>\r\n                    <Link to={`${match.url}/props-v-state`}>Props v. State</Link>\r\n                </li>\r\n            </ul>\r\n\r\n            <Switch>\r\n                <Route path={`${match.path}/:topicId`}>\r\n                    <Topic/>\r\n                </Route>\r\n                <Route path={match.path}>\r\n                    <h3>Please select a topic.</h3>\r\n                </Route>\r\n            </Switch>\r\n        </div>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function Home() {\r\n    return <h2>Home</h2>;\r\n}\r\n","import React from \"react\";\r\n\r\n\r\nimport {Route, Switch} from \"react-router-dom\";\r\n\r\nimport ProductList from \"../components/products/ProductList\";\r\nimport ProductEdit from \"../components/products/ProductEdit\";\r\n\r\nimport About from \"../pages/About\";\r\nimport Topics from \"../pages/Topics\";\r\nimport Home from \"../pages/Home\";\r\n\r\nexport default function ShareComponents(props) {\r\n\r\n\r\n    //todo:Handler all using json conf\r\n    return (\r\n\r\n        <Switch>\r\n            <Route path=\"/about\"><About {...props} /></Route>\r\n            <Route path=\"/topics\"><Topics {...props}  /></Route>\r\n\r\n\r\n            <Route path=\"/products/edit/:id\" children={<ProductEdit  {...props} />}/>\r\n            <Route path=\"/products/delete/:id\" children={<ProductEdit {...props} />}/>\r\n\r\n            <Route path=\"/products\"><ProductList {...props}  /></Route>\r\n            <Route path=\"/\"><Home  {...props} /></Route>\r\n        </Switch>\r\n    );\r\n}\r\n","import React from \"react\";\r\n\r\nimport {Link} from \"react-router-dom\";\r\nimport {Menu} from \"antd\";\r\nimport Icon from '@ant-design/icons';\r\n\r\nconst {SubMenu} = Menu;\r\n\r\nexport default function MainMenu(props) {\r\n    return (\r\n        <>\r\n            <Menu theme=\"dark\" defaultSelectedKeys={[\"1\"]} mode=\"inline\">\r\n                <Menu.Item key=\"1\">\r\n                    <Link to=\"/products\">\r\n                        <Icon type=\"rocket\"/>\r\n                        <span>Products</span>\r\n                    </Link>\r\n                </Menu.Item>\r\n                <Menu.Item key=\"2\">\r\n                    <Icon type=\"desktop\"/>\r\n                    <span>Option 2</span>\r\n                </Menu.Item>\r\n                <SubMenu\r\n                    key=\"sub1\"\r\n                    title={\r\n                        <span>\r\n              <Icon type=\"user\"/>\r\n              <span>User</span>\r\n            </span>\r\n                    }\r\n                >\r\n                    <Menu.Item key=\"3\">Tom</Menu.Item>\r\n                    <Menu.Item key=\"4\">Bill</Menu.Item>\r\n                    <Menu.Item key=\"5\">Alex</Menu.Item>\r\n                </SubMenu>\r\n                <SubMenu\r\n                    key=\"sub2\"\r\n                    title={\r\n                        <span>\r\n              <Icon type=\"team\"/>\r\n              <span>Team</span>\r\n            </span>\r\n                    }\r\n                >\r\n                    <Menu.Item key=\"6\">Team 1</Menu.Item>\r\n                    <Menu.Item key=\"8\">Team 2</Menu.Item>\r\n                </SubMenu>\r\n                <Menu.Item key=\"9\">\r\n                    <Icon type=\"file\"/>\r\n                    <span>File</span>\r\n                </Menu.Item>\r\n\r\n                <Menu.Item key=\"10\" onClick={props.logout}>\r\n                    <Icon type=\"logout\"/>\r\n                    <span>Logout</span>\r\n                </Menu.Item>\r\n\r\n            </Menu>\r\n        </>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport {BrowserRouter as Router} from \"react-router-dom\";\r\nimport {Layout} from 'antd';\r\nimport ShareComponents from \"../shares/ShareComponents\";\r\nimport MainMenu from \"../menus/MainMenu\";\r\n\r\n\r\nconst {Header, Content, Footer, Sider} = Layout;\r\n\r\n\r\nexport default function DashBoard(props) {\r\n    const {state, onCollapse} = {...props};\r\n    return (\r\n        <Router>\r\n            <Layout style={{minHeight: \"100vh\"}}>\r\n                <Sider\r\n                    collapsible\r\n                    collapsed={state.collapsed}\r\n                    onCollapse={onCollapse}\r\n                >\r\n                    <div className=\"logo\"/>\r\n                    <MainMenu {...props} />\r\n                </Sider>\r\n                <Layout>\r\n                    <Header style={{background: \"#fff\", padding: 0}}/>\r\n                    <Content style={{margin: \"0 16px\"}}>\r\n\r\n\r\n                        <ShareComponents {...props} />\r\n\r\n\r\n                    </Content>\r\n                    <Footer style={{textAlign: \"center\"}}>\r\n                        Ant Design ©2018 Created by Ant UED\r\n                    </Footer>\r\n                </Layout>\r\n\r\n            </Layout>\r\n        </Router>\r\n    );\r\n\r\n}\r\n","import axios from \"axios\";\r\nimport qs from \"qs\";\r\nimport Settings from \"../../Settings\";\r\n\r\nconst AuthServices = {\r\n    doLogin: user => {\r\n        const credenciales = btoa(`${Settings.SecurityCredentials.user}:${Settings.SecurityCredentials.password}`);\r\n\r\n        const httpHeaders = {\r\n            \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n            Authorization: \"Basic \" + credenciales\r\n        };\r\n\r\n        let data = {\r\n            grant_type: \"password\",\r\n            username: user.username,\r\n            password: user.password\r\n        };\r\n\r\n        return axios.post(`${Settings.url}${Settings.auth}`, qs.stringify(data), {headers: httpHeaders});\r\n\r\n    }\r\n};\r\n\r\nexport default AuthServices;\r\n","import React from \"react\";\r\nimport { Form, Input, Button, Checkbox,Row, Col,Modal ,Layout  } from \"antd\";\r\nimport Icon from '@ant-design/icons';\r\n\r\n\r\n\r\n\r\nimport AuthServices from \"../../services/auth/AuthServices\";\r\n\r\nconst { Header, Footer,  Content } = Layout;\r\n\r\n\r\n\r\n\r\nexport default class LoginComponent extends React.Component {\r\n    state = { Modavisible: false };\r\n\r\n\r\n\r\n    handleSubmit = values => {\r\n\r\n\r\n                AuthServices.doLogin(values).then(response => {\r\n                    this.props.setUser(response.data);\r\n                }).catch(error => {\r\n                    Modal.error({ title: 'Error',  content: error.response.data.error_description});\r\n                });\r\n\r\n    };\r\n    toggleModal = () => {\r\n        this.setState({\r\n            Modavisible: !this.state.Modavisible,\r\n        });\r\n    };\r\n    render() {\r\n        const onFinish = values => {\r\n            console.log('Success:', values);\r\n        };\r\n\r\n        const onFinishFailed = errorInfo => {\r\n            console.log('Failed:', errorInfo);\r\n        };\r\n\r\n        return (\r\n            <Layout className=\"layout\">\r\n                <Header>\r\n                    <div className=\"logo\" />\r\n                </Header>\r\n                <Content>\r\n                    <Row type=\"flex\">\r\n                        <Col span={9} order={1}>\r\n                            <Modal\r\n                                title=\"Modal\"\r\n                                visible={this.state.Modavisible}\r\n                                onOk={this.toggleModal}\r\n                                okText=\"Ok\"\r\n                            />\r\n\r\n                        </Col>\r\n                        <Col span={6} order={2}>\r\n                            <Form   className=\"login-form\"  placeholder=\"Username\"\r\n\r\n\r\n                                  onFinish={this.handleSubmit}\r\n                                  onFinishFailed={onFinishFailed}\r\n                            >\r\n                                <Form.Item name=\"username\" rules={[{ required: true, message: \"Please input your username!\" }]} >\r\n                                    <Input\r\n                                        prefix={\r\n                                            <Icon\r\n                                                type=\"user\"\r\n                                                style={{ color: \"rgba(0,0,0,.25)\" }}\r\n                                            />\r\n                                        }\r\n                                        placeholder=\"Username\"\r\n                                    />\r\n                                </Form.Item>\r\n                                <Form.Item  name=\"password\" rules={[{ required: true, message: \"Please input your Password!\" }]} >\r\n                                    <Input\r\n                                        prefix={\r\n                                            <Icon\r\n                                                type=\"lock\"\r\n                                                style={{ color: \"rgba(0,0,0,.25)\" }}\r\n                                            />\r\n                                        }\r\n                                        type=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                    />\r\n                                </Form.Item>\r\n                                <Form.Item name=\"remember\" rules={[{ valuePropName: \"checked\", initialValue: true }]}>\r\n\r\n                                    <a className=\"login-form-forgot\" href=\"\">\r\n                                        Forgot password\r\n                                    </a>\r\n                                    <br />\r\n                                    <Button\r\n                                        type=\"primary\"\r\n                                        htmlType=\"submit\"\r\n                                        className=\"login-form-button\"\r\n                                    >\r\n                                        Log in\r\n                                    </Button>\r\n                                </Form.Item>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Content>\r\n                <Footer style={{ textAlign: \"center\" }}>\r\n                    Ant Design ©2018 Created by Ant UED\r\n                </Footer>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n","import React, {useState, useEffect} from \"react\";\nimport DashBoard from \"./general/pages/DashBoard\";\nimport LoginComponent from \"./general/auth/Login\";\nimport './App.css';\n\nexport default function App() {\n    const [user, setUser] = useState(null);\n    const [state, setState] = useState({collapsed: false, user: null});\n\n\n    const logout = () => {\n        sessionStorage.removeItem('userProfile',);\n        setUser(null);\n    }\n\n    const refreshUser = (data) => {\n        data.Authorization=`Bearer ${data.access_token}`\n        sessionStorage.setItem('userProfile', JSON.stringify(data));\n        setUser(data);\n    }\n\n\n    useEffect(() => {\n        if (sessionStorage.getItem('userProfile')) {\n            setUser(JSON.parse(sessionStorage.getItem('userProfile')));\n        }\n\n    }, []);\n\n\n    const onCollapse = collapsed => {\n        setState({collapsed});\n    };\n\n    if (!user || user === {}) {\n        return (\n            <LoginComponent\n                setUser={refreshUser}\n                state={state}\n                onCollapse={onCollapse}\n                user={\n                    user\n                }/>\n        );\n    }\n\n    return <DashBoard state={state}\n                      onCollapse={onCollapse}\n                      logout={logout}\n                      user={\n                          user\n                      }/>;\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}